{"mappings":"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","sources":["src/garretth.ts"],"sourcesContent":["\nconst mainDiv = document.getElementById(\"insertHere\");\n\n//h1 creation\nconst heading1 = document.createElement(\"h1\");\nheading1.textContent = \"Using TypeScript and HTML\";\nheading1.id = \"tsandhtml\";\n\n//h2 creation\nconst heading2 = document.createElement(\"h2\");\nheading2.textContent = \"About me\";\nheading2.id = \"aboutme\";\n\n//h3 creation\nconst heading3 = document.createElement(\"h3\");\nheading3.textContent = \"Courses in Progress\";\nheading3.id = \"inprogress\";\n\n//h4 creation\nconst heading4 = document.createElement(\"h4\");\nheading4.textContent = \"Courses Completed\";\nheading4.id = \"completed\";\n\n//adding children to Div in body of html doc\nmainDiv?.appendChild(heading1);\nmainDiv?.appendChild(heading2);\nmainDiv?.appendChild(heading3);\nmainDiv?.appendChild(heading4);\n\n//creating personal info object\nconst PersonalInformation = {\n    name: \"Hayden Garrett\",\n    email: \"garretth@mail.gvsu.edu\",\n    pets: 1,\n    hobbies: [\"Reading\", \"Baseball\", \"Board Games\", \"Card Games\"],\n    likesWaffles: true,\n}\n\nconst aboutMeTable = document.createElement('table');\nheading2.appendChild(aboutMeTable);\n\nfor (let rowName in PersonalInformation){\n    const newRow = document.createElement('tr');\n    newRow.textContent = rowName;\n    aboutMeTable.appendChild(newRow);\n    const tableData = document.createElement('td');\n\n    //if the type of the rowName is an object then it will create a list of all elements in the object\n    //or if it's not an object then it will just add the single piece of data to the row \n    if(typeof Object(PersonalInformation)[rowName] === \"object\"){\n        const hobbyList = document.createElement(\"ul\");\n        tableData.appendChild(hobbyList);\n        for (let anItem in Object(PersonalInformation)[rowName]) {\n            const listItem = document.createElement('li');\n            listItem.textContent = Object(PersonalInformation)[rowName][anItem];\n            hobbyList.appendChild(listItem);\n        }\n        tableData.appendChild(hobbyList);\n        newRow.appendChild(tableData);\n    } else {\n        tableData.textContent = Object(PersonalInformation)[rowName];\n        newRow.appendChild(tableData)\n    }\n}\n\n//Created an extra paragraph element that holds a link to my twitter\nconst twitPara = document.createElement('p');\ntwitPara.textContent = \"Twitter Handle: \";\nconst twitterHandle = document.createElement('a');\ntwitterHandle.textContent = \"@HaydenSGarrett_\";\ntwitterHandle.setAttribute(\"href\", \"https://twitter.com/HaydenSGarrett_\");\ntwitPara.appendChild(twitterHandle);\nheading2.appendChild(twitPara);\n\n\n\n/*\n    Type aliases that were defined in the instructions\n*/\n//base course type that will be extended for On-Going and Completed-Courses\ntype Course = {\n    code: string,\n    name: string,\n    credits: number\n}\n\n/* extension of the course object to create two separate objects \"CompletedCourse\"\nand \"OngoingCourse\" that will create different sets of courses */\ntype CompletedCourse = Course & {\n    semesterCompleted: string\n}\n\ntype OngoingCourse = Course & {\n  classTimes: Array<string>;\n  //classDayandTime: Map<string, number>\n}\n\nconst onGoing: Array<OngoingCourse> = [\n    {\n      code: \"CIS371-01\",\n      name: \"Web Application Development\",\n      credits: 3,\n      classTimes: [\"Mon 2-3p\", \"Wed 2-3p\", \"Fri 2-3p\"]\n    },\n    {\n        code: \"CIS452-30\",\n        name: \"Operating Systems Concepts\",\n        credits: 4,\n        classTimes: [\"Mon 12-1p\", \"Wed 12-1p\",\"Thur 4-6p\", \"Fri 12-1p\"]\n      },\n      {\n        code: \"CIS467-01\",\n        name: \"Computer Science Project\",\n        credits: 4,\n        classTimes: [\"Mon 4-5:15p\", \"Wed 4-5:15p\"]\n      },\n      {\n        code: \"HST204-03\",\n        name: \"SWS World History since 1500\",\n        credits: 3,\n        classTimes: [\"Mon 10-11a\", \"Wed 10-11a\", \"Fri 10-11a\"]\n      },\n]\n\n//onGoing class list with class times below each class\nconst onGoingNumberedList = document.createElement(\"ol\");\nfor (let aClass in onGoing){\n    const onGoingItem = document.createElement('li');\n    onGoingItem.textContent = Object(onGoing)[aClass].code + \" \" + Object(onGoing)[aClass].name + \" (\" + Object(onGoing)[aClass].credits + \" credits)\";\n    const meetingList = document.createElement('ul');\n    for (let classTime in Object(onGoing)[aClass].classTimes){\n        const oneClass = document.createElement('li');\n        oneClass.textContent = Object(onGoing)[aClass].classTimes[classTime];\n        meetingList.appendChild(oneClass);\n    }\n    onGoingItem.appendChild(meetingList);\n    onGoingNumberedList.appendChild(onGoingItem);\n    heading3.appendChild(onGoingNumberedList);\n}\n\n\n\n\n\n// Completed courses where I have 7 courses added from previous semesters\nconst complete: Array<CompletedCourse> = [\n    {\n      code: \"CIS241\",\n      name: \"System-Level Programming & Utilities\",\n      credits: 3,\n      semesterCompleted: \"Fall 2020\"\n    },\n    {\n        code: \"CIS263\",\n        name: \"Data Structures and Algorithms\",\n        credits: 3,\n        semesterCompleted: \"Fall 2020\"\n    },\n    {\n        code: \"CIS350\",\n        name: \"Intro Software Egr\",\n        credits: 3,\n        semesterCompleted: \"Winter 2021\"\n    },\n    {\n        code: \"MTH203\",\n        name: \"Calculus III\",\n        credits: 4,\n        semesterCompleted: \"Fall 2019\"\n    },\n    {\n        code: \"CIS162\",\n        name: \"Computer Science 1\",\n        credits: 4,\n        semesterCompleted: \"Fall 2019\"\n    },\n    {\n        code: \"COM201\",\n        name: \"Speech\",\n        credits: 3,\n        semesterCompleted: \"Fall 2020\"\n    },\n    {\n        code: \"MTH225\",\n        name: \"Discrete Structures: CS 1\",\n        credits: 3,\n        semesterCompleted: \"Fall 2020\"\n    },\n    \n]\n\n//Completed Courses table section first creating the headers for the columns then\n//looping to fill the data of the table\nconst completedTable = document.createElement('table');\n\nheading4.appendChild(completedTable);\nconst completedHeader = document.createElement('tr');\n\nconst courseRow = document.createElement('th');\ncourseRow.textContent = \"Course\";\n\nconst creditRow = document.createElement('th');\ncreditRow.textContent = \"Credit\";\n\nconst completedRow = document.createElement('th');\ncompletedRow.textContent = \"Completed\";\n\ncompletedHeader.appendChild(courseRow);\ncompletedHeader.appendChild(creditRow);\ncompletedHeader.appendChild(completedRow);\ncompletedTable.appendChild(completedHeader);\nlet total: number = 0;\n\n//creation of the Courses Completed Table\nfor (let aCourse in complete){\n    const newRow = document.createElement('tr');\n    completedTable.appendChild(newRow);\n\n    \n    const courseInfo = document.createElement('td');\n    courseInfo.textContent = Object(complete)[aCourse].code + \" \" + Object(complete)[aCourse].name;\n    newRow.appendChild(courseInfo);\n\n    const numCreds = document.createElement('td');\n    numCreds.textContent = Object(complete)[aCourse].credits;\n    newRow.appendChild(numCreds);\n\n    const semesterComp = document.createElement('td');\n    semesterComp.textContent = Object(complete)[aCourse].semesterCompleted;\n    newRow.appendChild(semesterComp);\n    total += Object(complete)[aCourse].credits;\n}\n\n// created the total row by calculating total of all credits from completed courses array\nconst totalRow = document.createElement('tr');\nconst totalSet = document.createElement('td');\ntotalSet.textContent = \"Total: \";\ntotalRow.appendChild(totalSet);\nconst totalNum = document.createElement('td');\ntotalNum.textContent = total.toString();\ntotalRow.appendChild(totalNum);\ncompletedTable.appendChild(totalRow);\n\n//setting class names and attribute to demonstrate css styling\ncompletedTable.className = \"table\";\naboutMeTable.className = \"table\";\n\nheading4.setAttribute(\"title\", \"A list of completed classes at GVSU\");\n"],"names":[],"version":3,"file":"index.a88c153d.js.map","sourceRoot":"/__parcel_source_root/"}